<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQndCQkLIqX7Qx9ENDw8NB2MAAAAAAAAAAABjCQsNDw8PusPL
        zG+BrmRkZGRkQmRkZGRkQmRkZGRkZGRkQkJkZGRkZGTJrFJXpM3ODg8NDQsBAAAAAAAAAAAAAgYNDQ8N
        GMeuyKdSNclkZGRknmRkZGRkZ2RkZGRkZGRknp5kZGRkZGRkWq81yndaxy8NDQ4NBWMAAAAAAAAAAAEQ
        DQ4PD8LDxGdkxXhnZ2eenmdnZ2dnZGeenmdnZ2dnnp5nnmdnZ2dnZ2SusmRnQsa6Dw0NDxACAAAAAAAA
        AAAJEQ0NDw6/rmRnZ2dnZ2dnZ2dnZ2dntGdnZ2dnZ2dnZ2dnZ2dnZ2dnZ7S0Z7RnZ2dawA4NDw/BAwAA
        AAAAAABjBQsNDQ8SqLK0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0sr4vDw8P
        CwljAAAAAAAAAgcNDw0PObslJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJmS8
        vQ4PDwwGYwAAAAAAAAEIDQ8PDRRbtLm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5uY65ubm5ubm5ubm5ubm5
        ubkmWroNDQ8PCAEAAAAAAAADEA0PDQ4Ws11djo6Ojo6Ojo6Ojo6Ojo6Ojo4falglXY6Ojo6Ojo6Ojo6O
        jo6Ojo6OjrO4DQ4PDxACAAAAAAAACQoNDw0ObR4nJyerJyerJycyJyerqycyJydKrW+vqTsnJycnMicn
        qycnJ6urqycnMi0esQ0ODw8KAQAAAAAAAAkRDQ0NDrGypnpMsyerq6urq6urq6urq6u0frW2rbVVMjKr
        q6urq6urq6urq6ueeno3cLcODg0NEQEAAAAAAAAJCg0PDQ4/XKmqqnhQPUerPUerq0erRz09pqytWq6v
        VII9qz09qz1HR6urq0dHWKqqsGqodg0PDwoDAAAAAAAACQoNDQ0OOjtzRUWjJ0coR0coKEcoRyhHRx5U
        WXqkpX5dKEdHKEdHRygoKEdHR6anRXRKqBgNDw8KAQAAAAAAAAkKDQ0NDp2eRzIyKCkpKSkpKSkpKSkp
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEBAQEBAQIA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////wAAAAAAD//+A
        AAAAAAH//4AAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAA
        AP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//gAAAAAAAP/+AAAAAAAAf/wA
        AAAAAAA//AAAAAAAAD/4AAAAAAAAH/gAAAAAAAAf8AAAAAAAAB/wAAAAAAAAD/AAAAAAAAAP8AAAAAAA
        AA/gAAAAAAAAB+AAAAAAAAAH4AAAAAAAAAfgAAAAAAAAB+AAAAAAAAAH4AAAAAAAAAfgAAAAAAAAB+AA
        AAAAAAAH4AAAAAAAAAfgAAAAAAAAB+AAAAAAAAAH4AAAAAAAAAfgAAAAAAAAB+AAAAAAAAAP8AAAAAAA
        AA/wAAAAAAAAD/AAAAAAAAAP+AAAAAAAAB/4AAAAAAAAH/gAAAAAAAA//AAAAAAAAD/+AAAAAAAAf/4A
        AAAAAAB//wAAAAAAAP//gAAAAAAB//+AAAAAAAP//8AAAAAAA///4AAAAAAH///wAAAAAA////gAAAAA
        P////gAAAAB/////AAAAAP/////AAAAD//////AAAA///////gAAf///////4Af/////////////////
        ////////
</value>
  </data>
</root>